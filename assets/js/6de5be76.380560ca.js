"use strict";(self.webpackChunkmetabasedoc=self.webpackChunkmetabasedoc||[]).push([[280],{3905:(e,t,r)=>{r.d(t,{kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),u=s(r),f=a,d=u["".concat(l,".").concat(f)]||u[f]||p[f]||o;return r?n.createElement(d,i(i({ref:t},m),{},{components:r})):n.createElement(d,i({ref:t},m))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4410:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=r(1550),a=(r(7294),r(3905));const o={sidebar_label:"Parameter",hide_title:!0,sidebar_position:2,title:"MetaBase Contract Parameters"},i=void 0,c={unversionedId:"config/parameter",id:"config/parameter",title:"MetaBase Contract Parameters",description:"Contract Internal Parameters",source:"@site/docs/config/2_parameter.md",sourceDirName:"config",slug:"/config/parameter",permalink:"/docs/config/parameter",draft:!1,editUrl:"https://github.com/metabaseex/docs/edit/master/docs/config/2_parameter.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Parameter",hide_title:!0,sidebar_position:2,title:"MetaBase Contract Parameters"},sidebar:"someSidebar",previous:{title:"Contract",permalink:"/docs/config/contract"},next:{title:"Public Test",permalink:"/docs/public_test"}},l={},s=[{value:"Contract Internal Parameters",id:"contract-internal-parameters",level:3}],p={toc:s};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"contract-internal-parameters"},"Contract Internal Parameters"),(0,a.kt)("p",null,"The following parameters are the main network parameters. When the main network is online, they may be adjusted dynamically. Please update them in time."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Swap fee:")," 0.3%"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Listing fee:")," 10 MGAS"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"IDO pool creation fee:")," 500 MGAS"))}m.isMDXComponent=!0}}]);